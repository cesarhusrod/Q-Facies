; ===============================================================================
; ===================== OPTIONS FILE for Q-Facies package ========================
; ===============================================================================
; This file define the options for applying qfacies to a specifed dataset.
; It is essential to respect the format to avoid errors in the program execution.

; ===============================================================================
; ============================ GENERAL OPTIONS ==================================
; ===============================================================================

; Name of the input data file (including extension). 
; It shoud be localized in 'Data' folder.
fname='Alfamen.txt'

; How to analyze the dataset:'by_groups','by_time'
way='by_time'

; Wether to consider outlier points or not. True or False
; Outliers detection is computed in two steps:
; _._In the first step, a preliminary ; detection of outliers is done throughout
;    an unsupervised outlier detection method using Local Outlier Factor (LOF,
;    from sklearn library). For more info, visit:
;    https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.LocalOutlierFactor.html
; _._In the second step, this outliers are checked and only those within the convex
;    hull polygon will be consider.
lof=False

; Number of surroundings points taking into account while computing LOF algorithm.
; Note that, the lower this value is, the more points will be consider as outliers.
; If n_neighbors is larger than the number of samples provided, all samples will be used.
lof_neighbours=20

;Create an Excel with the output information (saved in 'Data' folder). True or False
excel=False

;Transform ions concentrations from mg/L or ppm to percentage of meq/L. 
;True or False
transform=True

; ===============================================================================
; ========================== TIME ANALYSIS OPTIONS ==============================
; ===============================================================================
; Only considered when the variable way is set to 'by_time'

; Dates format. For more info, visit:
; https://www.dataindependent.com/pandas/pandas-to-datetime/
time_format= '%d/%m/%Y'

; Width of the window at which the program will be creating groups. Integer.
; It has always to be greater than three, which is the minimum number required
; to create groups
window_size=8

; Magnitud of the step when rolling the window.Integer.
freq=4

; Space the time-series in regular intervals? True or False
space=False

; Time interval of time-series spacing. Only considered when space=True.
; Options: 'yearly', 'monthly', 'weekly', 'daily'
; Other options can be found at:
; https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases
; A custom frequency can be made by preceding the date acronym by an integer. 
; Eg: An every-17-days freq would be input as '17D'
space_interval='yearly' 

; Agregation method for the resample function: 'mean','last','first'
agregation='mean' 

; ===============================================================================
; ============================== GRAPHICS OPTIONS ===============================
; ===============================================================================
;
; All the output graphics will be stored at 'Graphics' folder.
;
; The color to use in the different elements can be specifed by two ways: 
; a) Following Matplotlib nomenclature (see https://matplotlib.org/stable/gallery/
; color/named_colors.html) Eg: 'blue'
; b) Following HEX nomenclature.Eg '#BB2EB3'
;

; ============================= Lines and Points ================================

; Plot the outliers points? (note that they hasn't been considered during indexes
; calculations)
plot_outliers=True

; Color of the outliers points.
color_outliers='Red'

; Point size. This size will be apply to all plotted points. Integer.
point_size=8

; Points transparency. Float between 0 (transparent) and 1 (opaque)
point_transparency=0.8

; Color of the points that conform the convex hull.
color_outter_points='black'

; Color of the points that lies within the convex hull.
color_inner_points='grey'

; Regression line width.
line_lw=0.5

; Regression line color.
line_color='#2774CC'

; ============================= Polygons and Hulls ================================

; ?????????????????????????????????????????????????????????????????????????????????????????????????????????????
; Convex hull color. 
pol_color='green'

; Transparency of the convex hull and its color filling. 
; Float between 0 (transparent) and 1 (opaque).
pol_transparency=1

; Perimeter line width of the convex hull polygon.
pol_lw=0.5

; Perimeter line color of the convex hull polygon.
pol_ec='red'

; Color palette to be used in color scaled figures.
; Examples: 'Greens', 'Greys', 'Blues', 'Reds', 'YlOrBr', 'Spectral', etc.
; Many more options are available at:
; https://matplotlib.org/3.1.1/tutorials/colors/colormaps.html
cmap_name='Greens'

; Color to plot the polygons.
; This could be done attending to a specific color or a color pallete.
folder_color='Spectral'

; ======================== Color pallete and clipping ===========================

; Wether to reverse the color pallete or not. True or False.
cmap_reversed=False

; Clip the regression lines attending to the panels' extensions. True or False.
clip_lines=False

; ================= Outoput Graphics format and Resolution ======================

; Figure's resolution (in dots per inch). Integer.
dpi=400

; Output graphic format: 'jpg', 'png', 'svg', 'pdf', 'ps' 
extension_graph='png'


; ===============================================================================
; ================== WHAT GRAPHICS TO DRAW AND HOW TO DO IT =====================
; ===============================================================================

; Create a Piper-diagram per group with all the index information?. True or False.
figs=True

; Create a Piper-diagram including all the convex hulls of the dataset. True or False.
; La gradación de color se puede hacer en función de cualquiera de los índices:
; 'Area', 'Shape', 'Blau','Angle', 'Time', 'Dispersion'.
; Además se puede dibujar tanto el polígono como el centroide. 
; 'centroids', 'polygons'.
overlap_fig=True
overlap_var='Blau'
overlap_way='polygons'

; Create a figure composed by three plots (one per panel) with the information
; of the whole indixes.
; When way='by_time', each plot shows the indixes' temporal evolution.
; When way='by_groups', each plot shows a stacked bars histogram.
evolution_fig=True

; Create a figure with all the points graduated by its date. True or False.
; Only available when way='by_time'. 
;The cmap_name variable will be used as color palette.
plot_all=True

; ===============================================================================
; ============================== OTHER OPTIONS ==================================
; ===============================================================================

; Ignore all execution warnings. True or False.
ignore_warnings=True
